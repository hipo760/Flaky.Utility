name: Nuget package CI/CD

on:
  push:
    branches: [ master ]

jobs:
  check_version_number:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get semantic release version
        uses: cycjimmy/semantic-release-action@v2
        id: semantic_dry
        with:
          branch: master
          dry_run: true
          # You can specify specifying version range for the extra plugins if you prefer.
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    outputs:
      new_release_published: ${{ steps.semantic_dry.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic_dry.outputs.new_release_version }}
  
  build_package_push:
    needs: check_version_number
    if: needs.check_version_number.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name:  Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '6.0.x' # SDK Version to use.
      
      - name: Build project Flaky.Utility
        run: dotnet build Flaky.Utility/Flaky.Utility.csproj --configuration Release -p:Version=${{ needs.check_version_number.outputs.new_release_version }}.0
      
      - name: Package Flaky.Utility
        run: dotnet pack Flaky.Utility/Flaky.Utility.csproj --configuration Release --output ./artifacts -p:PackageVersion=${{ needs.check_version_number.outputs.new_release_version }}
      
      - name: Build project Flaky.Utility.Serilog
        run: dotnet build Flaky.Utility.Serilog/Flaky.Utility.Serilog.csproj --configuration Release -p:Version=${{ needs.check_version_number.outputs.new_release_version }}.0
      
      - name: Package Flaky.Utility.Serilog
        run: dotnet pack Flaky.Utility.Serilog/Flaky.Utility.Serilog.csproj --configuration Release --output ./artifacts -p:PackageVersion=${{ needs.check_version_number.outputs.new_release_version }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: nuget-artifact
          path: ./artifacts/*.nupkg
          if-no-files-found: error
    
  tag_version:
    needs: [build_package_push,check_version_number]
    if: needs.check_version_number.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get semantic release version
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          branch: master
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
  
  push_to_nuget:
    needs: [tag_version,check_version_number]
    if: needs.check_version_number.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: nuget-artifact
    - run: ls -R
    
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x' # SDK Version to use.
      # env:
      #   NUGET_AUTH_TOKEN: ${{secrets.LUMPY_NUGET_TOKEN}}
    - name: Upload to nuget
      run: dotnet nuget push ./*.nupkg --api-key ${{ secrets.FLAKY_NUGET_TOKEN }} --source https://api.nuget.org/v3/index.json